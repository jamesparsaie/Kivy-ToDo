import kivy
import datetime
from datetime import date
from kivy.clock import Clock
from kivy.lang import Builder
from kivy.factory import Factory
from kivy.uix.screenmanager import NoTransition, ScreenManager, Screen, SlideTransition
from kivymd.app import MDApp
from kivy.factory import Factory
from kivymd.uix.list import IRightBodyTouch, ILeftBody
from kivymd.uix.selectioncontrol import MDCheckbox
from kivy.core.window import Window
from kivy.properties import StringProperty
from kivymd.uix.list import IconLeftWidget, OneLineIconListItem, OneLineListItem, TwoLineIconListItem

Window.size = (400, 580)



class ListItemWithCheckbox1(OneLineIconListItem):
    icon = StringProperty()


class ListItemWithCheckbox2(TwoLineIconListItem):
    pass


class RightCheckbox(IRightBodyTouch, MDCheckbox):
    pass


#Need this class to allow title to be filled in with date and time
class DummyScreen(Screen):
    def on_enter(self):
        Clock.schedule_once(self.switch_screen)

    def switch_screen(self, dt):
        self.manager.transition = NoTransition()
        self.manager.current = 'todo'
        self.manager.transition = SlideTransition()



#Reference for grabbing elements from seperate screens
#    self.manager.get_screen('name of screen here').ids.(name of id).(accessor)



#Class to handle ToDo list screen
#    Displays all tasks generated by the user
class ToDo(Screen):
    
    
    #This will handle on entry, from dummy screen, to load the current date and time
    #   More user friendly instead of generic title
    def on_enter(self):
        today = date.today()
        wd = date.weekday(today)
        days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']
        year = str(datetime.datetime.now().year)
        month = str(datetime.datetime.now().strftime('%b'))
        day = str(datetime.datetime.now().strftime('%d'))
        self.ids.bar.title = f'{days[wd]}, {month} {day}th {year}'

    
    def switch(self):
        self.manager.current = 'add'
        self.manager.transition.direction = 'left'

#Class to add entries to our to do list
class AddEntry(Screen):

    def switch(self):
        self.manager.current = 'todo'
        self.manager.transition.direction = 'right'

    def addTask(self):
        p1 = 'head-check'
        pic = IconLeftWidget(icon = 'head-check')
        taskName = self.ids.task.text
        taskDesc = self.ids.desc.text

        #THIS IS CAUSING CRASHES
        #TODO determine how to reference custom widget and create it in py file
        if(taskDesc == ''):
            #Having difficuly here creating custom list items
            #item = ListItemWithCheckbox1(text = taskName, icon = p1)
            item = OneLineIconListItem(text = taskName)
            item.add_widget(pic)
        else:
            item = TwoLineIconListItem(text = taskName, secondary_text = taskDesc)
            item.add_widget(pic)
        self.manager.get_screen('todo').ids.main.add_widget(item)

class WindowManager(ScreenManager):
    pass



class MainApp(MDApp):  

    def build(self):
        self.title = "To Do List"
        self.theme_cls.theme_style = 'Light'   #Background color
        return Builder.load_file("ToDo.kv")
        
MainApp().run()